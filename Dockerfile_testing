# Stage 1: Build stage
FROM ubuntu:20.04 AS build

# Set environment variables
ENV PATH="/usr/bin:$PATH" \
    POETRY_INSTALLER_MAX_WORKERS=8

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    build-essential \
    ca-certificates \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

SHELL ["/bin/bash", "-c"]

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 -

# Copy the project files
COPY . /library

# Set the working directory
WORKDIR /library

# Create and activate the virtual environment, and install dependencies
RUN python3 -m venv venv

RUN source venv/bin/activate && \
    venv/bin/pip install poetry && \
    poetry install --no-root --without=docs && \
    poetry build --format sdist && \
    poetry export --only=tests > requirements-test.txt

# Stage 2: Final stage to run the application (optional)
FROM ubuntu:20.04 as testing

# Set environment variables for the final image
ENV PATH="/usr/bin:$PATH"

# Install client system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    build-essential \
    ca-certificates \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy the distributed package, test directory and requirements-test.txt file from the build stage
COPY --from=build /library/dist /client/dist
COPY --from=build /library/tests /client/tests
COPY --from=build /library/requirements-test.txt /client/requirements-test.txt

# Set the working directory
WORKDIR /client

SHELL ["/bin/bash", "-c"]

RUN python3 -m venv client

CMD source client/bin/activate && \
    pip install dist/*.tar.gz && \
    pip install -r requirements-test.txt && \
    python -m pytest tests --cov=. -s -vv
